def distance_sensor_gui(self):
        # This example shows how to read values from the Distance Sensor

        # Create an instance of the GoPiGo3 class.
        # GPG will be the GoPiGo3 object.

        # Create an instance of the Distance Sensor class.
        # I2C1 and I2C2 are just labels used for identifyng the port on the GoPiGo3 board.
        # But technically, I2C1 and I2C2 are the same thing, so we don't have to pass any port to the constructor.
        #my_distance_sensor = self.__gpg.init_distance_sensor()

        while True:
            pass
           # Read the sensor into variables
            #self.__inches = str(my_distance_sensor.read_inches())

            # Print the values of the sensor to the console
            #print("Distance Sensor Reading: " + inches + " inches")

            #if distance sensor reads that robot is too close to something stop robot
            #robot then runs test to see which direction is best to go
            #if(inches < 10):

                #robot stops?

                #call function with servo test
                #self.distance_test()

def distance_test(self):
        #rotate to right and test distance
        self.__servo.rotate_servo(0)
        time.sleep(5)
        if(self.__inches > 10):
            self.auto_pilot()
    
        self.__servo.rotate_servo(165)
        time.sleep(5)